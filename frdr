#!/usr/bin/env bash

CONFIG_DIR=~/.config/frdr
CONFIG_FILE=~/.config/frdr/config.env

export CACHE_DIR=~/.cache/frdr

download_feeds() {
	mkdir -p $CACHE_DIR
	for feed in "${FEEDS[@]}"; do
		read -r alias url <<<"$feed"
		feed_dir="$CACHE_DIR/${alias// /_}"
		[[ ! -d $feed_dir ]] && mkdir "$feed_dir"
		if [[ -f $url ]]; then
			cat "$url"
		else
			wget -q -O- "$url"
		fi |
			rss2json |
			jq -c --arg alias "$alias" '. as $c | $c.items[] | 
	   {
       title: .title,
       timestamp: (.pub_date | strptime("%a, %d %b %Y %T %z") | mktime | tostring),
       pub_date: (.pub_date | strptime("%a, %d %b %Y %T %z") | strftime("%d %b %y %k:%M")),
       link: .link,
       guid: .guid,
       description: .description,
       content: .content,
	     channel_alias: $alias,
	     channel: $c.title,
	     channel_link: $c.link,
	     channel_desc: $c.description,
	     read: 0
	   }' |
			while read -r obj; do
				hash=$(jq '.guid' <<<"$obj" | cksum)
				file="$feed_dir/${hash%% *}.json"
				[[ ! -f $file ]] && jq <<<"$obj" >"$file"
			done
	done
}

aggregate_items() {
	for json in "$CACHE_DIR"/*/*.json; do
		jq -r --arg json "$json" \
			'select(.read == 0) |
     (.timestamp) + " " + 
     ($json) + " " + 
     (.link) + " " + 
     "[" + (.pub_date) + "]" +
     "[" + (.channel_alias) + "] " +
     (.title)' \
			"$json"
	done |
		sort -r
}
export -f aggregate_items

mark_read() {
	tmp="$(mktemp)"
	jq '.read = 1' "$1" >"$tmp"
	mv "$tmp" "$1"
}
export -f mark_read

[[ ! -f $CONFIG_FILE ]] &&
	(
		echo "creating config file $CONFIG_FILE"
		mkdir -p $CONFIG_DIR
		printf "FEEDS=(\n# \"ALIAS=<FEED URL>\"\n\"trev https://trevarj.github.io/rss.xml\"\n)" >$CONFIG_FILE
	)

# shellcheck disable=SC1090
source $CONFIG_FILE

download_feeds

aggregate_items |
	fzf --layout=reverse \
		--delimiter=" " \
		--with-nth=4.. \
		--preview="jq -r '.description' {2} | \$PAGER" \
		--bind="r:reload(bash -c 'mark_read {2}; aggregate_items')" \
		--bind="enter:execute(jq -r '.description' {2} | \$PAGER)" \
		--bind="o:execute(xdg-open {3})"

# TODO: add some cache clearing mechanism
